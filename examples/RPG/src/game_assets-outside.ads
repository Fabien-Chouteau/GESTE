with GESTE;
with GESTE.Grid;
pragma Style_Checks (Off);
package Game_Assets.outside is

   --  outside
   Width       : constant := 40;
   Height      : constant := 30;
   Tile_Width  : constant := 16;
   Tile_Height : constant := 16;

   --  ground
   package ground is
      Width  : constant :=  40;
      Height : constant :=  40;
      Data   : aliased GESTE.Grid.Grid_Data :=
  (( 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479),
         ( 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 480, 481, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479),
         ( 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 482, 483, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479),
         ( 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479),
         ( 479, 479, 0, 0, 0, 0, 484, 485, 484, 485, 486, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479),
         ( 479, 479, 0, 0, 0, 0, 487, 488, 487, 488, 489, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 490, 491, 492, 491, 492, 491, 492, 493),
         ( 479, 479, 0, 0, 0, 0, 494, 495, 494, 495, 496, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 497, 498, 499, 498, 499, 498, 499, 500),
         ( 479, 479, 0, 0, 0, 0, 487, 488, 487, 488, 489, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 501, 498, 499, 502, 503, 504, 505, 506),
         ( 479, 479, 0, 0, 0, 0, 494, 495, 494, 495, 496, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 497, 498, 499, 498, 497, 498, 499, 500),
         ( 479, 479, 0, 0, 0, 0, 487, 488, 487, 488, 496, 479, 479, 490, 493, 479, 479, 479, 479, 479, 479, 479, 501, 498, 499, 504, 501, 504, 505, 506),
         ( 479, 479, 0, 0, 0, 0, 494, 495, 494, 495, 489, 491, 492, 507, 508, 491, 492, 491, 492, 491, 492, 492, 507, 504, 505, 508, 507, 498, 499, 500),
         ( 479, 479, 0, 0, 0, 0, 487, 488, 487, 488, 496, 509, 510, 503, 502, 509, 510, 509, 510, 509, 510, 509, 503, 498, 499, 498, 499, 504, 505, 506),
         ( 479, 479, 0, 0, 0, 0, 494, 495, 494, 495, 496, 479, 479, 497, 500, 479, 479, 479, 479, 479, 479, 479, 497, 498, 499, 504, 505, 498, 499, 500),
         ( 479, 479, 0, 0, 0, 0, 511, 512, 511, 512, 513, 479, 479, 501, 506, 479, 479, 479, 479, 479, 479, 479, 501, 504, 505, 498, 499, 504, 505, 506),
         ( 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 497, 500, 479, 479, 479, 479, 479, 479, 479, 497, 498, 499, 504, 505, 498, 499, 500),
         ( 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 501, 506, 479, 479, 479, 479, 479, 479, 479, 501, 504, 505, 498, 499, 504, 505, 506),
         ( 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 497, 500, 479, 479, 479, 479, 479, 479, 479, 497, 504, 505, 504, 502, 509, 510, 514),
         ( 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 501, 506, 479, 479, 479, 479, 479, 479, 479, 501, 515, 516, 517, 506, 479, 518, 519),
         ( 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 497, 500, 480, 481, 479, 479, 479, 479, 479, 479, 520, 521, 522, 500, 479, 523, 524),
         ( 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 501, 506, 482, 483, 479, 479, 479, 479, 479, 497, 525, 526, 527, 506, 479, 528, 529),
         ( 479, 479, 479, 479, 479, 479, 479, 479, 518, 519, 479, 479, 479, 497, 506, 479, 479, 479, 479, 479, 479, 479, 501, 530, 531, 532, 508, 491, 492, 493),
         ( 479, 480, 481, 479, 479, 479, 479, 479, 523, 524, 479, 479, 479, 501, 500, 479, 479, 479, 479, 479, 479, 479, 497, 515, 516, 517, 533, 534, 535, 500),
         ( 479, 482, 483, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 497, 506, 479, 490, 491, 479, 479, 479, 479, 501, 520, 521, 522, 536, 537, 538, 506),
         ( 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 501, 500, 479, 497, 498, 498, 479, 479, 479, 479, 515, 516, 517, 533, 534, 535, 500),
         ( 479, 479, 479, 518, 519, 479, 490, 491, 492, 491, 492, 491, 492, 507, 506, 479, 501, 504, 504, 479, 479, 479, 479, 520, 521, 522, 536, 537, 538, 506),
         ( 479, 479, 479, 523, 524, 479, 497, 502, 509, 510, 509, 510, 509, 510, 539, 479, 497, 498, 504, 479, 479, 479, 479, 525, 526, 527, 540, 541, 542, 500),
         ( 479, 479, 479, 479, 479, 479, 501, 500, 479, 479, 479, 479, 479, 479, 479, 479, 501, 504, 498, 479, 479, 479, 479, 530, 531, 532, 543, 544, 545, 506),
         ( 479, 479, 546, 547, 548, 548, 547, 548, 547, 548, 549, 479, 479, 480, 481, 479, 497, 498, 515, 516, 517, 479, 479, 515, 0, 515, 533, 534, 535, 500),
         ( 479, 479, 550, 551, 551, 551, 551, 551, 551, 551, 552, 518, 519, 482, 483, 479, 501, 504, 520, 521, 522, 479, 479, 520, 0, 520, 536, 537, 538, 506),
         ( 479, 479, 550, 551, 551, 551, 551, 551, 551, 551, 553, 523, 524, 479, 479, 479, 497, 498, 525, 526, 527, 479, 479, 525, 0, 525, 540, 541, 542, 500),
         ( 479, 479, 554, 551, 551, 551, 551, 551, 551, 551, 552, 518, 519, 479, 479, 479, 501, 504, 530, 531, 532, 479, 479, 530, 0, 530, 543, 544, 545, 506),
         ( 479, 479, 550, 551, 551, 551, 479, 551, 551, 551, 553, 523, 524, 528, 529, 490, 507, 498, 504, 479, 479, 479, 479, 515, 516, 517, 533, 534, 535, 500),
         ( 479, 479, 554, 551, 551, 555, 556, 557, 556, 557, 558, 479, 479, 559, 560, 497, 498, 498, 499, 479, 479, 479, 479, 520, 521, 522, 536, 537, 538, 506),
         ( 518, 519, 550, 551, 551, 552, 497, 500, 479, 479, 479, 479, 479, 479, 479, 501, 504, 504, 505, 479, 479, 479, 479, 525, 526, 527, 540, 541, 542, 500),
         ( 523, 524, 554, 551, 551, 553, 501, 506, 479, 479, 479, 479, 479, 479, 479, 497, 504, 505, 505, 479, 479, 479, 479, 530, 531, 532, 543, 544, 545, 506),
         ( 479, 479, 561, 556, 557, 558, 497, 500, 479, 479, 479, 479, 479, 479, 479, 501, 502, 509, 479, 479, 479, 479, 503, 515, 516, 517, 533, 534, 535, 500),
         ( 479, 479, 479, 479, 479, 479, 501, 508, 492, 491, 492, 491, 492, 491, 492, 507, 506, 479, 479, 479, 479, 479, 501, 520, 521, 522, 536, 537, 538, 506),
         ( 479, 479, 479, 480, 481, 479, 562, 509, 510, 509, 510, 509, 510, 509, 510, 510, 514, 479, 479, 479, 479, 479, 497, 525, 526, 527, 540, 541, 542, 500),
         ( 479, 479, 479, 482, 483, 479, 479, 479, 479, 518, 519, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 501, 530, 531, 532, 543, 544, 545, 506),
         ( 479, 479, 479, 479, 479, 479, 479, 479, 479, 523, 524, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 479, 562, 509, 510, 509, 510, 509, 510, 514))      ;
   end ground;

   --  over
   package over is
      Width  : constant :=  40;
      Height : constant :=  40;
      Data   : aliased GESTE.Grid.Grid_Data :=
  (( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 563, 564, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 565, 566, 0, 0, 0, 0, 0, 567, 563, 564),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 568, 569, 570, 0, 0, 0, 571, 565, 566),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 572, 573, 574, 0, 0, 0, 575, 576, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 577, 578, 579, 0, 0, 0, 0, 0, 0, 0, 0, 0, 580, 581, 582, 0, 0, 0, 583, 584, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 585, 586, 587, 0, 0, 0, 0, 0, 0, 0, 0, 0, 588, 589, 590, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 591, 592, 593, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 594, 595, 596, 0, 0, 0, 597, 598, 0, 0, 563, 564, 518, 519, 0, 0, 0, 599, 600, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 601, 602, 0, 0, 565, 566, 523, 524, 0, 0, 0, 603, 604, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 605, 606, 607, 608, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 609, 610, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 611, 612, 613, 614, 615, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 616, 617, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 618, 619, 620, 621, 622, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 623, 624, 625, 626, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 627, 628, 629, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 569, 570, 0, 0, 0, 0, 0, 0, 0, 0, 630, 631, 632, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 573, 574, 0, 0, 0, 0, 0, 0, 0, 0, 633, 634, 635, 0, 0, 0, 0, 636, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 581, 582, 0, 0, 0, 0, 0, 0, 0, 563, 564, 637, 638, 0, 0, 0, 0, 639, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 589, 590, 0, 0, 0, 0, 0, 0, 0, 565, 566, 0, 501, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 640, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 641, 642, 0, 643, 644, 645, 646, 0, 647, 0, 0),
         ( 0, 0, 0, 563, 564, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 649, 650, 651, 652, 653, 653, 654, 0, 0, 0, 0),
         ( 0, 0, 0, 565, 566, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 655, 656, 657, 658, 659, 653, 660, 661, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 662, 663, 664, 653, 653, 665, 666, 667, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 668, 669, 653, 653, 670, 671, 672, 673, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 674, 675, 675, 676, 677, 678, 679, 680, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 681, 682, 683, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 684, 677, 678, 679, 680, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 685, 686, 687, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 688, 689, 690, 691, 692, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 685, 686, 687, 0, 0, 0, 0, 0, 563, 564, 0, 0, 0, 0, 0, 0, 693, 677, 694, 695, 696, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 697, 698, 699, 0, 0, 0, 0, 0, 565, 566, 0, 0, 0, 0, 0, 0, 700, 689, 701, 702, 703, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 697, 698, 699, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 704, 705, 706, 707, 689, 701, 702, 703, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 708, 709, 710, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 711, 712, 713, 705, 714, 715, 716, 717, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 718, 719, 720, 713, 705, 721, 722, 723, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 563, 564, 0, 0, 0, 0, 0, 0, 0, 724, 725, 726, 727, 728, 705, 729, 730, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 565, 566, 0, 0, 0, 0, 0, 0, 0, 731, 732, 733, 734, 735, 705, 705, 736, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 737, 738, 739, 740, 741, 742, 743, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))      ;
   end over;

   --  over2
   package over2 is
      Width  : constant :=  40;
      Height : constant :=  40;
      Data   : aliased GESTE.Grid.Grid_Data :=
  (( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 744, 745, 746, 747, 748, 749, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 0, 0, 0),
         ( 0, 0, 786, 787, 788, 789, 0, 0, 0, 0, 0, 0, 0, 0, 0, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 0, 0, 0),
         ( 0, 0, 802, 803, 804, 805, 0, 0, 0, 0, 0, 0, 0, 0, 0, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 0, 0, 0),
         ( 0, 0, 818, 819, 820, 821, 822, 823, 824, 825, 0, 0, 0, 0, 0, 826, 827, 828, 829, 830, 831, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 802, 803, 804, 805, 832, 833, 834, 835, 0, 836, 837, 0, 0, 0, 0, 0, 0, 0, 0, 0, 838, 839, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 818, 819, 820, 821, 0, 0, 0, 0, 0, 840, 841, 0, 0, 0, 0, 0, 0, 0, 0, 0, 842, 843, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 802, 803, 804, 805, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 844, 845, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 818, 819, 820, 821, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 846, 847, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 802, 803, 804, 805, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 818, 819, 820, 821, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 848, 849, 850, 851, 0, 0, 0, 0, 0, 0, 0, 0, 0, 852, 853, 854, 855, 856, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 752, 753, 754, 755, 857, 0, 0, 0, 0, 0, 858, 859, 860, 861, 862, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 762, 763, 764, 765, 766, 767, 568, 0, 0, 0, 0, 0, 863, 864, 865, 866, 867, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 774, 775, 776, 777, 778, 779, 572, 0, 0, 0, 0, 0, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 0, 0, 0),
         ( 0, 0, 0, 790, 791, 792, 793, 794, 795, 580, 0, 0, 0, 0, 0, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 0, 0, 0),
         ( 0, 0, 0, 806, 807, 808, 809, 810, 811, 588, 0, 0, 0, 0, 0, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 0, 0),
         ( 0, 0, 0, 0, 0, 828, 829, 830, 831, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 905, 906, 907, 908, 909, 910, 911, 912, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 913, 914, 915, 916, 917, 918, 919, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 920, 921, 922, 923, 924, 925, 926, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))      ;
   end over2;

   --  collisions
   package collisions is
      Width  : constant :=  40;
      Height : constant :=  40;
      Data   : aliased GESTE.Grid.Grid_Data :=
  (( 927, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 928),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 236, 0, 0, 0, 0, 239, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 234, 234, 234, 234, 234, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 239, 239, 0, 0, 0, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 234, 0, 0, 234, 234, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 234, 0, 0, 0, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 234, 0, 0, 0, 234, 0, 0, 234, 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 234, 234, 235, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 234, 0, 0, 0, 234, 0, 0, 234, 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 234, 234, 235, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 234, 234, 234, 234, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 234, 234, 235, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 234, 234, 235, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 234, 234, 234, 234, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 234, 234, 234, 234, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 236, 0, 0, 0, 0, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 236, 236, 0, 0, 0, 0, 0, 0, 0, 0, 0, 239, 239, 236, 0, 0, 0, 0, 236, 236, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 239, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 239, 239, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0, 0, 0, 236, 236, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 239, 239, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 928, 234, 234, 234, 0, 0, 0, 0, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238, 234, 234, 477, 0, 0, 242, 235, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238, 234, 477, 0, 0, 242, 234, 235, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238, 477, 0, 0, 242, 234, 234, 235, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 929, 234, 234, 234, 235, 0, 0, 0, 238),
         ( 235, 0, 929, 236, 236, 235, 238, 234, 236, 236, 237, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238, 234, 234, 234, 235, 0, 0, 0, 238),
         ( 235, 0, 238, 234, 234, 235, 238, 234, 234, 234, 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238, 234, 234, 234, 235, 0, 0, 0, 238),
         ( 235, 0, 238, 234, 234, 235, 238, 234, 234, 234, 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238, 234, 234, 234, 235, 0, 0, 0, 238),
         ( 235, 0, 238, 234, 234, 235, 238, 234, 234, 234, 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238, 234, 234, 234, 235, 0, 0, 0, 238),
         ( 235, 0, 238, 234, 234, 235, 238, 234, 234, 234, 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 930, 234, 234, 234, 235, 0, 0, 0, 238),
         ( 235, 0, 238, 234, 234, 235, 238, 234, 239, 239, 240, 0, 0, 0, 0, 0, 0, 0, 238, 478, 0, 0, 241, 234, 234, 235, 0, 0, 0, 238),
         ( 235, 0, 238, 234, 234, 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238, 234, 478, 0, 0, 241, 234, 235, 0, 0, 0, 238),
         ( 235, 0, 238, 234, 234, 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238, 234, 234, 478, 0, 0, 241, 235, 0, 0, 0, 238),
         ( 235, 0, 930, 239, 239, 240, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 234, 234, 234, 234, 0, 0, 0, 0, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238),
         ( 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238),
         ( 931, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 932))      ;
   end collisions;

   package gates is
      Objects : Object_Array :=
        (
           0 => (
            Kind => RECTANGLE_OBJ,
            Id   =>  6,
            Name => new String'("To_House"),
            X    =>  1.60000E+02,
            Y    =>  1.12000E+02,
            Width =>  3.20000E+01,
            Height =>  6.00000E+01,
            Tile_Id =>  0,
            Str => null
          ),
           1 => (
            Kind => POINT_OBJ,
            Id   =>  8,
            Name => new String'("From_House"),
            X    =>  1.76000E+02,
            Y    =>  1.96000E+02,
            Width =>  0.00000E+00,
            Height =>  0.00000E+00,
            Tile_Id =>  0,
            Str => null
          )
        );
      To_House : aliased constant Object := (
        Kind => RECTANGLE_OBJ,
        Id   =>  6,
        Name => new String'("To_House"),
        X    =>  1.60000E+02,
        Y    =>  1.12000E+02,
        Width =>  3.20000E+01,
        Height =>  6.00000E+01,
        Tile_Id =>  0,
        Str => null
        );
      From_House : aliased constant Object := (
        Kind => POINT_OBJ,
        Id   =>  8,
        Name => new String'("From_House"),
        X    =>  1.76000E+02,
        Y    =>  1.96000E+02,
        Width =>  0.00000E+00,
        Height =>  0.00000E+00,
        Tile_Id =>  0,
        Str => null
        );
   end gates;
   package screen_border is
      Objects : Object_Array :=
        (
           0 => (
            Kind => RECTANGLE_OBJ,
            Id   =>  1,
            Name => null,
            X    =>  0.00000E+00,
            Y    =>  0.00000E+00,
            Width =>  3.20000E+02,
            Height =>  2.40000E+02,
            Tile_Id =>  0,
            Str => null
          ),
           1 => (
            Kind => RECTANGLE_OBJ,
            Id   =>  2,
            Name => null,
            X    =>  3.20000E+02,
            Y    =>  0.00000E+00,
            Width =>  3.20000E+02,
            Height =>  2.40000E+02,
            Tile_Id =>  0,
            Str => null
          ),
           2 => (
            Kind => RECTANGLE_OBJ,
            Id   =>  3,
            Name => null,
            X    =>  3.20000E+02,
            Y    =>  2.40000E+02,
            Width =>  3.20000E+02,
            Height =>  2.40000E+02,
            Tile_Id =>  0,
            Str => null
          ),
           3 => (
            Kind => RECTANGLE_OBJ,
            Id   =>  7,
            Name => null,
            X    =>  0.00000E+00,
            Y    =>  2.40000E+02,
            Width =>  3.20000E+02,
            Height =>  2.40000E+02,
            Tile_Id =>  0,
            Str => null
          )
        );
   end screen_border;
end Game_Assets.outside;
