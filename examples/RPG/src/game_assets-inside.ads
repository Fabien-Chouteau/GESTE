with GESTE;
with GESTE.Grid;
pragma Style_Checks (Off);
package Game_Assets.inside is

   --  inside
   Width       : constant := 20;
   Height      : constant := 15;
   Tile_Width  : constant := 16;
   Tile_Height : constant := 16;

   --  ground
   package ground is
      Width  : constant :=  20;
      Height : constant :=  20;
      Data   : aliased GESTE.Grid.Grid_Data :=
  (( 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3),
         ( 4, 5, 6, 7, 8, 9, 10, 11, 5, 6, 7, 8, 12, 13, 14),
         ( 11, 5, 6, 7, 8, 15, 16, 11, 17, 18, 19, 20, 21, 22, 23),
         ( 24, 17, 18, 19, 20, 25, 26, 24, 27, 28, 29, 30, 31, 32, 14),
         ( 11, 27, 28, 29, 30, 33, 34, 24, 35, 36, 37, 38, 39, 40, 23),
         ( 24, 35, 36, 37, 38, 9, 10, 41, 42, 43, 44, 9, 10, 41, 14),
         ( 11, 5, 6, 7, 8, 15, 16, 45, 46, 47, 48, 15, 16, 45, 23),
         ( 24, 17, 18, 19, 20, 25, 26, 49, 50, 51, 52, 53, 26, 49, 23),
         ( 11, 27, 28, 29, 30, 33, 34, 54, 55, 56, 57, 58, 34, 54, 59),
         ( 24, 35, 36, 37, 38, 9, 10, 41, 60, 61, 62, 63, 10, 41, 42),
         ( 11, 5, 6, 7, 8, 15, 16, 45, 55, 56, 57, 58, 16, 45, 46),
         ( 24, 17, 18, 19, 20, 25, 26, 49, 64, 65, 66, 67, 26, 49, 68),
         ( 11, 27, 28, 29, 30, 33, 34, 54, 69, 70, 71, 33, 34, 54, 14),
         ( 24, 35, 36, 37, 38, 9, 10, 41, 42, 43, 44, 9, 10, 41, 14),
         ( 11, 5, 6, 7, 8, 72, 73, 74, 74, 75, 48, 15, 16, 45, 14),
         ( 24, 17, 18, 19, 20, 76, 77, 78, 78, 79, 80, 25, 26, 49, 14),
         ( 11, 27, 28, 29, 30, 76, 77, 77, 78, 79, 71, 33, 34, 54, 14),
         ( 24, 35, 36, 37, 38, 81, 82, 82, 83, 84, 44, 9, 85, 86, 14),
         ( 87, 35, 36, 37, 38, 88, 89, 89, 90, 91, 48, 15, 92, 93, 23),
         ( 94, 95, 95, 95, 96, 97, 96, 97, 96, 97, 96, 97, 96, 97, 98))      ;
   end ground;

   --  walls
   package walls is
      Width  : constant :=  20;
      Height : constant :=  20;
      Data   : aliased GESTE.Grid.Grid_Data :=
  (( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 99, 100, 101, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 103, 104, 105, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 107, 108, 109, 110, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 112, 113, 114, 115, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 117, 118, 119, 120, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 122, 123, 124, 125, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 127, 128, 129, 130, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 132, 133, 134, 135, 136, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 137, 138, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 139, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))      ;
   end walls;

   --  objects
   package objects is
      Width  : constant :=  20;
      Height : constant :=  20;
      Data   : aliased GESTE.Grid.Grid_Data :=
  (( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 24, 0, 0, 0, 141, 142, 143, 0, 0, 144, 145, 146, 147, 0, 0),
         ( 0, 0, 0, 0, 148, 149, 150, 0, 0, 151, 152, 153, 154, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 155, 156, 157, 158, 159, 160, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 161, 162, 163, 164, 165, 166, 0, 0),
         ( 0, 167, 168, 169, 170, 171, 172, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 173, 174, 175, 176, 177, 178, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 179, 180, 181, 0, 0, 0, 0),
         ( 0, 0, 0, 182, 183, 184, 0, 0, 185, 186, 187, 0, 0, 0, 0),
         ( 0, 0, 0, 188, 189, 190, 0, 0, 191, 192, 193, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 194, 195, 196, 0, 0, 0, 0),
         ( 0, 167, 168, 0, 0, 0, 0, 0, 197, 198, 199, 0, 0, 0, 0),
         ( 0, 173, 174, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 200, 201, 202, 203, 204, 205, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 206, 207, 208, 209, 210, 211, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 212, 213, 214, 215, 216, 217, 0, 0, 0, 0, 0, 0),
         ( 24, 0, 0, 218, 219, 220, 221, 222, 223, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))      ;
   end objects;

   --  objects2
   package objects2 is
      Width  : constant :=  20;
      Height : constant :=  20;
      Data   : aliased GESTE.Grid.Grid_Data :=
  (( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 224, 225, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 226, 227, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 228, 229, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 230, 231, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 233, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))      ;
   end objects2;

   --  collisions
   package collisions is
      Width  : constant :=  20;
      Height : constant :=  20;
      Data   : aliased GESTE.Grid.Grid_Data :=
  (( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 234, 234, 234, 234),
         ( 0, 0, 0, 0, 0, 234, 234, 0, 0, 0, 0, 234, 0, 0, 234),
         ( 0, 0, 0, 0, 234, 234, 234, 234, 0, 0, 0, 234, 0, 0, 234),
         ( 0, 0, 0, 0, 234, 0, 0, 234, 0, 0, 0, 234, 235, 0, 234),
         ( 0, 0, 0, 0, 234, 0, 0, 234, 234, 234, 234, 234, 235, 0, 234),
         ( 0, 0, 0, 0, 234, 234, 0, 0, 0, 0, 0, 0, 0, 0, 234),
         ( 0, 0, 0, 0, 234, 234, 0, 0, 0, 0, 0, 0, 0, 0, 234),
         ( 0, 0, 0, 0, 234, 0, 0, 0, 236, 236, 237, 0, 0, 0, 234),
         ( 0, 0, 0, 0, 234, 0, 0, 238, 234, 234, 235, 0, 0, 0, 234),
         ( 0, 0, 0, 0, 234, 0, 0, 238, 234, 234, 235, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 234, 235, 0, 0, 234, 234, 235, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 234, 0, 0, 0, 239, 239, 240, 0, 0, 0, 234),
         ( 0, 0, 0, 0, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 234),
         ( 0, 0, 0, 0, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 234),
         ( 0, 0, 0, 0, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 234),
         ( 0, 0, 0, 0, 234, 236, 236, 236, 236, 0, 0, 0, 0, 0, 234),
         ( 0, 0, 0, 0, 234, 234, 234, 234, 234, 0, 0, 0, 0, 0, 234),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 234, 0, 0, 0, 241, 234, 234),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 234, 0, 0, 0, 242, 234, 234),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 234, 234, 234, 234, 234, 234, 234))      ;
   end collisions;

   package gates is
      Objects : Object_Array :=
        (
           0 => (
            Kind => RECTANGLE_OBJ,
            Id   =>  1,
            Name => new String'("To_Outside"),
            X    =>  1.44000E+02,
            Y    =>  2.24000E+02,
            Width =>  3.20000E+01,
            Height =>  1.60000E+01,
            Tile_Id =>  0,
            Str => null
          ),
           1 => (
            Kind => RECTANGLE_OBJ,
            Id   =>  2,
            Name => new String'("To_Cave"),
            X    =>  2.76000E+02,
            Y    =>  1.84000E+02,
            Width =>  2.80000E+01,
            Height =>  3.60000E+01,
            Tile_Id =>  0,
            Str => null
          ),
           2 => (
            Kind => POINT_OBJ,
            Id   =>  4,
            Name => new String'("From_Cave"),
            X    =>  2.72000E+02,
            Y    =>  1.68000E+02,
            Width =>  0.00000E+00,
            Height =>  0.00000E+00,
            Tile_Id =>  0,
            Str => null
          ),
           3 => (
            Kind => POINT_OBJ,
            Id   =>  5,
            Name => new String'("From_Outside"),
            X    =>  1.60000E+02,
            Y    =>  2.12000E+02,
            Width =>  0.00000E+00,
            Height =>  0.00000E+00,
            Tile_Id =>  0,
            Str => null
          )
        );
      To_Outside : aliased constant Object := (
        Kind => RECTANGLE_OBJ,
        Id   =>  1,
        Name => new String'("To_Outside"),
        X    =>  1.44000E+02,
        Y    =>  2.24000E+02,
        Width =>  3.20000E+01,
        Height =>  1.60000E+01,
        Tile_Id =>  0,
        Str => null
        );
      To_Cave : aliased constant Object := (
        Kind => RECTANGLE_OBJ,
        Id   =>  2,
        Name => new String'("To_Cave"),
        X    =>  2.76000E+02,
        Y    =>  1.84000E+02,
        Width =>  2.80000E+01,
        Height =>  3.60000E+01,
        Tile_Id =>  0,
        Str => null
        );
      From_Cave : aliased constant Object := (
        Kind => POINT_OBJ,
        Id   =>  4,
        Name => new String'("From_Cave"),
        X    =>  2.72000E+02,
        Y    =>  1.68000E+02,
        Width =>  0.00000E+00,
        Height =>  0.00000E+00,
        Tile_Id =>  0,
        Str => null
        );
      From_Outside : aliased constant Object := (
        Kind => POINT_OBJ,
        Id   =>  5,
        Name => new String'("From_Outside"),
        X    =>  1.60000E+02,
        Y    =>  2.12000E+02,
        Width =>  0.00000E+00,
        Height =>  0.00000E+00,
        Tile_Id =>  0,
        Str => null
        );
   end gates;
end Game_Assets.inside;
