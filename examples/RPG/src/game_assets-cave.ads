with GESTE;
with GESTE.Grid;
pragma Style_Checks (Off);
package Game_Assets.cave is

   --  cave
   Width       : constant := 20;
   Height      : constant := 15;
   Tile_Width  : constant := 16;
   Tile_Height : constant := 16;

   --  Ground
   package Ground is
      Width  : constant :=  20;
      Height : constant :=  20;
      Data   : aliased GESTE.Grid.Grid_Data :=
  (( 52, 116, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 20),
         ( 178, 210, 242, 274, 306, 5125, 5157, 5189, 5029, 5061, 5093, 5125, 5157, 5189, 82),
         ( 179, 211, 243, 275, 307, 5126, 5158, 5190, 5030, 5062, 5094, 5126, 5158, 5190, 83),
         ( 178, 210, 242, 274, 306, 5127, 5159, 5191, 5031, 5063, 5095, 5127, 5159, 5191, 82),
         ( 179, 211, 243, 275, 307, 5128, 5160, 5192, 5032, 5064, 5096, 5128, 5160, 5192, 83),
         ( 178, 210, 242, 274, 306, 5125, 5157, 5189, 5029, 5061, 5093, 5125, 5157, 5189, 82),
         ( 179, 211, 243, 275, 307, 5126, 5158, 5190, 5030, 5062, 5094, 5126, 5158, 5190, 83),
         ( 178, 210, 242, 274, 306, 5127, 5159, 5191, 5031, 5063, 5095, 5127, 5159, 5191, 82),
         ( 179, 211, 243, 275, 307, 5128, 5160, 5192, 5032, 5064, 5096, 5128, 5160, 5192, 83),
         ( 178, 210, 242, 274, 306, 5125, 5157, 5189, 5029, 5061, 5093, 5125, 5157, 5189, 82),
         ( 179, 211, 243, 275, 307, 5126, 5158, 5190, 5030, 5062, 5094, 5126, 5158, 5190, 83),
         ( 178, 210, 242, 274, 306, 5127, 5159, 5191, 5031, 5063, 5095, 5127, 5159, 5191, 82),
         ( 179, 211, 243, 275, 307, 5128, 5160, 5192, 5032, 5064, 5096, 5128, 5160, 5192, 83),
         ( 178, 210, 242, 274, 306, 5125, 5157, 5189, 5029, 5061, 5093, 5125, 5157, 5189, 82),
         ( 179, 211, 243, 275, 307, 5126, 5158, 5190, 5030, 5062, 5094, 5126, 5158, 5190, 83),
         ( 178, 210, 242, 274, 306, 5127, 5159, 5191, 5031, 5063, 5095, 5127, 5159, 5191, 82),
         ( 179, 211, 243, 275, 307, 5128, 5160, 5192, 5032, 5064, 5096, 5128, 5160, 5192, 83),
         ( 178, 210, 242, 274, 306, 5127, 5159, 5191, 5031, 5063, 5095, 5127, 0, 0, 82),
         ( 179, 211, 243, 275, 307, 5128, 5160, 5192, 5032, 5064, 5096, 0, 0, 0, 83),
         ( 51, 113, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 19))      ;
   end Ground;

   --  Over
   package Over is
      Width  : constant :=  20;
      Height : constant :=  20;
      Data   : aliased GESTE.Grid.Grid_Data :=
  (( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 1977, 2009, 2041, 2073, 1321, 1353, 1843, 1875, 0, 0, 0),
         ( 0, 0, 0, 0, 1978, 2010, 2042, 2074, 1322, 1354, 1844, 1876, 0, 0, 0),
         ( 0, 1383, 1415, 0, 1979, 2011, 2043, 2075, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 1384, 1416, 0, 1980, 2012, 2044, 2076, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 1981, 2013, 2045, 2077, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 1982, 2014, 2046, 2078, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 1983, 2015, 2047, 2079, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 1984, 2016, 2048, 2080, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 1383, 1415, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 1384, 1416, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 1725, 1757, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 1726, 1758, 0, 0, 0, 0, 0),
         ( 0, 1265, 1297, 1329, 1361, 1393, 0, 0, 1727, 1759, 0, 0, 0, 0, 0),
         ( 0, 1266, 1298, 1330, 1362, 1394, 0, 0, 1728, 1760, 0, 0, 0, 0, 0),
         ( 0, 1273, 1305, 1337, 1369, 1401, 0, 0, 0, 0, 6241, 6273, 6305, 6337, 0),
         ( 0, 1274, 1306, 1338, 1370, 1402, 0, 0, 0, 0, 6242, 6274, 6306, 6338, 0),
         ( 0, 1269, 1301, 1333, 1365, 1397, 0, 0, 0, 0, 6243, 6275, 6307, 6339, 0),
         ( 0, 1270, 1302, 1334, 1366, 1398, 0, 0, 0, 0, 6244, 6276, 6308, 6340, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))      ;
   end Over;

   --  collisions
   package collisions is
      Width  : constant :=  20;
      Height : constant :=  20;
      Data   : aliased GESTE.Grid.Grid_Data :=
  (( 0, 0, 0, 0, 0, 8373, 8373, 8373, 8373, 8373, 8373, 8373, 8373, 8373, 8373),
         ( 0, 0, 0, 0, 0, 8373, 8373, 8373, 8373, 8373, 8373, 8373, 0, 0, 8373),
         ( 0, 0, 0, 0, 0, 8373, 8373, 8373, 8379, 8385, 8379, 8385, 0, 0, 8373),
         ( 0, 0, 0, 0, 0, 8373, 8373, 8389, 0, 0, 0, 0, 0, 0, 8373),
         ( 0, 0, 0, 0, 0, 8373, 8373, 8385, 0, 0, 0, 0, 0, 0, 8373),
         ( 0, 0, 0, 0, 0, 8373, 8373, 0, 0, 0, 0, 0, 0, 0, 8373),
         ( 0, 0, 0, 0, 0, 8373, 8373, 8389, 0, 0, 0, 0, 0, 0, 8373),
         ( 0, 0, 0, 0, 0, 8373, 8373, 8373, 0, 0, 0, 0, 0, 0, 8373),
         ( 0, 0, 0, 0, 8373, 8373, 8384, 0, 0, 0, 0, 0, 0, 0, 8373),
         ( 0, 0, 0, 0, 8373, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8373),
         ( 0, 0, 0, 0, 8373, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8373),
         ( 0, 0, 0, 0, 8373, 0, 0, 0, 8373, 8373, 0, 0, 0, 0, 8373),
         ( 0, 0, 0, 0, 8373, 0, 0, 0, 8373, 8373, 0, 0, 0, 0, 8373),
         ( 0, 0, 0, 0, 8373, 8375, 0, 0, 8387, 8373, 0, 0, 0, 0, 8373),
         ( 0, 0, 0, 0, 8373, 8375, 0, 0, 8373, 8373, 0, 0, 0, 0, 8373),
         ( 0, 0, 0, 0, 8373, 8375, 0, 0, 0, 0, 0, 8390, 8373, 8373, 8373),
         ( 0, 0, 0, 0, 8373, 8375, 0, 0, 0, 0, 0, 8373, 8373, 8373, 8373),
         ( 0, 0, 0, 0, 8373, 8375, 0, 0, 0, 0, 8390, 8373, 8373, 8373, 8373),
         ( 0, 0, 0, 0, 8373, 8375, 0, 0, 0, 0, 8373, 8373, 8373, 8373, 8373),
         ( 0, 0, 0, 0, 8373, 8373, 8373, 8373, 8373, 8373, 8373, 8373, 8373, 8373, 8373))      ;
   end collisions;

   package gates is
      Objects : Object_Array :=
        (
           0 => (
            Kind => POINT_OBJ,
            Id   =>  1,
            Name => new String'("From_House"),
            X    =>  2.00000E+02,
            Y    =>  2.08000E+02,
            Width =>  0.00000E+00,
            Height =>  0.00000E+00,
            Tile_Id =>  0,
            Str => null
          ),
           1 => (
            Kind => RECTANGLE_OBJ,
            Id   =>  2,
            Name => new String'("To_House"),
            X    =>  2.24000E+02,
            Y    =>  1.88000E+02,
            Width =>  1.60000E+01,
            Height =>  3.60000E+01,
            Tile_Id =>  0,
            Str => null
          )
        );
      From_House : aliased constant Object := (
        Kind => POINT_OBJ,
        Id   =>  1,
        Name => new String'("From_House"),
        X    =>  2.00000E+02,
        Y    =>  2.08000E+02,
        Width =>  0.00000E+00,
        Height =>  0.00000E+00,
        Tile_Id =>  0,
        Str => null
        );
      To_House : aliased constant Object := (
        Kind => RECTANGLE_OBJ,
        Id   =>  2,
        Name => new String'("To_House"),
        X    =>  2.24000E+02,
        Y    =>  1.88000E+02,
        Width =>  1.60000E+01,
        Height =>  3.60000E+01,
        Tile_Id =>  0,
        Str => null
        );
   end gates;
end Game_Assets.cave;
