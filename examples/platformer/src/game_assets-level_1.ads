with GESTE;
pragma Style_Checks (Off);
package Game_Assets.Level_1 is

   --  Level_1
   Width       : constant := 20;
   Height      : constant := 15;
   Tile_Width  : constant := 16;
   Tile_Height : constant := 16;

   --  Back
   package Back is
      Width  : constant :=  20;
      Height : constant :=  20;
      Data   : aliased GESTE.Grid_Data :=
        (( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 77, 77, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 77, 77, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 77, 77, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 77, 77, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 77, 77, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58, 59),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58, 59));
   end Back;

   --  Mid
   package Mid is
      Width  : constant :=  20;
      Height : constant :=  20;
      Data   : aliased GESTE.Grid_Data :=
        (( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 8),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 8),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 8),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 8, 8),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 8, 8, 8),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 8, 8, 8, 8),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 8, 8, 8, 8, 8),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 8, 8, 8, 8, 8),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 9, 9, 8, 8, 8),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 8, 8, 8),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 8, 8, 8),
         ( 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 33, 8, 8, 8),
         ( 0, 0, 0, 0, 0, 29, 0, 0, 0, 1, 7, 7, 8, 8, 8),
         ( 0, 0, 0, 0, 0, 30, 0, 0, 0, 2, 8, 8, 8, 8, 8),
         ( 0, 0, 0, 0, 0, 0, 28, 0, 0, 2, 8, 8, 8, 8, 8),
         ( 0, 0, 0, 0, 0, 0, 30, 0, 0, 3, 9, 9, 9, 9, 9),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 55, 59),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 56, 59),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 57, 59),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 7, 7, 7, 7));
   end Mid;

   --  Front
   package Front is
      Width  : constant :=  20;
      Height : constant :=  20;
      Data   : aliased GESTE.Grid_Data :=
        (( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0),
         ( 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
         ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0));
   end Front;

end Game_Assets.Level_1;
